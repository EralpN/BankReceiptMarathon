-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
-- DATABASE NAME IS bank_receipt_db
BEGIN;


CREATE TABLE IF NOT EXISTS public.account_types
(
    oid bigint NOT NULL,
    account_type character varying(255) COLLATE pg_catalog."default",
    money_type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT account_types_pkey PRIMARY KEY (oid)
);

CREATE TABLE IF NOT EXISTS public.accounts
(
    oid bigint NOT NULL,
    account_type_oid bigint,
    branch_oid bigint,
    customer_oid bigint,
    CONSTRAINT accounts_pkey PRIMARY KEY (oid)
);

CREATE TABLE IF NOT EXISTS public.branches
(
    oid bigint NOT NULL,
    city_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT branches_pkey PRIMARY KEY (oid)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    oid bigint NOT NULL,
    first_name character varying(255) COLLATE pg_catalog."default",
    last_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT customers_pkey PRIMARY KEY (oid)
);

CREATE TABLE IF NOT EXISTS public.intermediaries
(
    oid bigint NOT NULL,
    intermediary_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT intermediaries_pkey PRIMARY KEY (oid)
);

CREATE TABLE IF NOT EXISTS public.transaction_operations
(
    oid bigint NOT NULL,
    transaction_operation character varying(255) COLLATE pg_catalog."default",
    transaction_type_oid bigint,
    CONSTRAINT transaction_operations_pkey PRIMARY KEY (oid)
);

CREATE TABLE IF NOT EXISTS public.transaction_types
(
    oid bigint NOT NULL,
    transaction_type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT transaction_types_pkey PRIMARY KEY (oid)
);

CREATE TABLE IF NOT EXISTS public.transactions
(
    oid bigint NOT NULL,
    transaction_amount double precision,
    transaction_date date,
    account_oid bigint,
    intermediary_oid bigint,
    transaction_operation_oid bigint,
    CONSTRAINT transactions_pkey PRIMARY KEY (oid)
);

ALTER TABLE IF EXISTS public.accounts
    ADD CONSTRAINT fk5vdy1v9lsjy2j3raxkcxrfcgi FOREIGN KEY (branch_oid)
    REFERENCES public.branches (oid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.accounts
    ADD CONSTRAINT fkg1fobwrbl6q36yrnxwvka3a6o FOREIGN KEY (account_type_oid)
    REFERENCES public.account_types (oid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.accounts
    ADD CONSTRAINT fkhgyilcjdempm48bsb5t6nrq6t FOREIGN KEY (customer_oid)
    REFERENCES public.customers (oid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transaction_operations
    ADD CONSTRAINT fk892o7iam4ev693vd85f2mwi2l FOREIGN KEY (transaction_type_oid)
    REFERENCES public.transaction_types (oid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT fk74n4bv4cqfdvkt9xwh6se2c2t FOREIGN KEY (intermediary_oid)
    REFERENCES public.intermediaries (oid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT fkc4m4ltdyaycsk1nr3mniyd02r FOREIGN KEY (account_oid)
    REFERENCES public.accounts (oid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT fkqi2so9o41p4atilewxbphjf0h FOREIGN KEY (transaction_operation_oid)
    REFERENCES public.transaction_operations (oid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;